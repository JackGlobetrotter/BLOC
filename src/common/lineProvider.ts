import { Line } from './Line';

/**
 * Return a zero based random number
 * @param max the max value
 * @returns a random number beteween 0 and max included
 */
function getRandomNumber(max: number) {
  // zero based!!!!
  let rnd = Math.random();
  while (rnd === 1) rnd = Math.random();

  return Math.floor(rnd * (max + 1));
}

enum LineGenerationType {
  Random,
  PseudorandomFixed,
  Pseudorandom,
}

class LineProvider {
  Positions = [
    2, 1, 3, 1, 3, 2, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 2, 3, 2, 1,
    3, 2, 1, 2, 3, 1, 2, 3, 1, 3, 2, 1, 3, 1, 2, 3, 2, 1, 2, 3, 2, 1, 3, 2, 1,
    2, 3, 1, 2, 3, 1, 3, 1, 3, 2,
  ];

  Letters = [
    [
      'R',
      'C',
      'U',
      'K',
      'Q',
      'D',
      'O',
      'T',
      'A',
      'N',
      'F',
      'P',
      'H',
      'X',
      'W',
      'G',
      'Z',
    ],
    [
      'H',
      'Q',
      'R',
      'X',
      'T',
      'E',
      'A',
      'W',
      'G',
      'M',
      'D',
      'N',
      'V',
      'B',
      'Z',
      'K',
      'C',
    ],
    [
      'Q',
      'G',
      'T',
      'D',
      'X',
      'K',
      'N',
      'O',
      'J',
      'C',
      'A',
      'F',
      'H',
      'R',
      'Y',
      'V',
      'W',
    ],
    [
      'F',
      'T',
      'A',
      'M',
      'X',
      'W',
      'Q',
      'Z',
      'U',
      'B',
      'H',
      'P',
      'J',
      'G',
      'S',
      'L',
      'C',
    ],
    [
      'E',
      'A',
      'X',
      'J',
      'K',
      'N',
      'O',
      'T',
      'C',
      'F',
      'G',
      'W',
      'D',
      'Q',
      'H',
      'V',
      'R',
    ],
    [
      'F',
      'T',
      'U',
      'G',
      'C',
      'P',
      'W',
      'X',
      'O',
      'M',
      'Y',
      'A',
      'S',
      'R',
      'J',
      'L',
      'N',
    ],
    [
      'R',
      'B',
      'Y',
      'G',
      'J',
      'C',
      'X',
      'T',
      'A',
      'W',
      'E',
      'Q',
      'L',
      'F',
      'O',
      'V',
      'P',
    ],
    [
      'K',
      'L',
      'O',
      'D',
      'H',
      'Q',
      'T',
      'Z',
      'R',
      'F',
      'C',
      'S',
      'A',
      'B',
      'W',
      'V',
      'O',
    ],
    [
      'C',
      'W',
      'Y',
      'K',
      'T',
      'D',
      'S',
      'J',
      'Z',
      'B',
      'V',
      'M',
      'R',
      'O',
      'P',
      'N',
      'A',
    ],
    [
      'F',
      'V',
      'Q',
      'Y',
      'W',
      'M',
      'R',
      'B',
      'C',
      'D',
      'N',
      'J',
      'K',
      'H',
      'L',
      'Z',
      'X',
    ],
    [
      'Z',
      'F',
      'J',
      'O',
      'E',
      'D',
      'M',
      'X',
      'R',
      'U',
      'Q',
      'K',
      'B',
      'H',
      'Y',
      'P',
      'V',
    ],
    [
      'U',
      'A',
      'H',
      'D',
      'Y',
      'M',
      'R',
      'B',
      'N',
      'E',
      'T',
      'J',
      'K',
      'Q',
      'X',
      'V',
      'W',
    ],
    [
      'W',
      'X',
      'C',
      'F',
      'R',
      'L',
      'B',
      'M',
      'J',
      'V',
      'A',
      'N',
      'S',
      'P',
      'Y',
      'U',
      'T',
    ],
    [
      'X',
      'C',
      'F',
      'R',
      'Q',
      'V',
      'U',
      'P',
      'Y',
      'M',
      'O',
      'L',
      'T',
      'G',
      'E',
      'S',
      'Z',
    ],
    [
      'T',
      'D',
      'J',
      'U',
      'Y',
      'Z',
      'V',
      'W',
      'Q',
      'C',
      'L',
      'H',
      'A',
      'X',
      'K',
      'B',
      'O',
    ],
    [
      'A',
      'X',
      'H',
      'Y',
      'U',
      'E',
      'C',
      'N',
      'T',
      'K',
      'F',
      'O',
      'D',
      'M',
      'J',
      'L',
      'V',
    ],
    [
      'S',
      'N',
      'D',
      'U',
      'R',
      'C',
      'B',
      'Z',
      'A',
      'K',
      'E',
      'W',
      'J',
      'O',
      'M',
      'Q',
      'L',
    ],
    [
      'P',
      'M',
      'V',
      'E',
      'U',
      'N',
      'G',
      'J',
      'B',
      'R',
      'D',
      'C',
      'W',
      'Y',
      'H',
      'L',
      'K',
    ],
    [
      'T',
      'Q',
      'P',
      'M',
      'X',
      'D',
      'S',
      'J',
      'V',
      'H',
      'Y',
      'U',
      'C',
      'F',
      'R',
      'A',
      'W',
    ],
    [
      'S',
      'B',
      'K',
      'R',
      'J',
      'Z',
      'H',
      'Y',
      'D',
      'N',
      'P',
      'Q',
      'M',
      'V',
      'G',
      'W',
      'X',
    ],
    [
      'P',
      'C',
      'K',
      'U',
      'M',
      'Q',
      'B',
      'R',
      'E',
      'V',
      'S',
      'J',
      'Y',
      'A',
      'O',
      'F',
      'Z',
    ],
    [
      'C',
      'S',
      'J',
      'Q',
      'A',
      'G',
      'T',
      'R',
      'O',
      'F',
      'B',
      'H',
      'W',
      'D',
      'E',
      'Y',
      'K',
    ],
    [
      'Q',
      'T',
      'C',
      'G',
      'A',
      'Z',
      'N',
      'O',
      'V',
      'J',
      'K',
      'D',
      'H',
      'Y',
      'R',
      'E',
      'M',
    ],
    [
      'J',
      'Z',
      'F',
      'Y',
      'R',
      'C',
      'L',
      'X',
      'P',
      'N',
      'K',
      'H',
      'E',
      'B',
      'A',
      'G',
      'Q',
    ],
    [
      'L',
      'R',
      'V',
      'G',
      'T',
      'J',
      'C',
      'U',
      'Q',
      'Z',
      'E',
      'X',
      'F',
      'B',
      'Y',
      'D',
      'S',
    ],
    [
      'B',
      'D',
      'L',
      'X',
      'A',
      'K',
      'M',
      'S',
      'V',
      'G',
      'J',
      'F',
      'O',
      'P',
      'R',
      'U',
      'E',
    ],
    [
      'O',
      'D',
      'C',
      'S',
      'V',
      'N',
      'X',
      'J',
      'R',
      'T',
      'L',
      'U',
      'Q',
      'M',
      'K',
      'W',
      'B',
    ],
    [
      'C',
      'Z',
      'V',
      'W',
      'O',
      'B',
      'S',
      'A',
      'T',
      'J',
      'F',
      'Q',
      'R',
      'H',
      'P',
      'N',
      'Y',
    ],
    [
      'V',
      'B',
      'U',
      'E',
      'L',
      'N',
      'P',
      'T',
      'R',
      'D',
      'C',
      'G',
      'J',
      'H',
      'S',
      'Z',
      'M',
    ],
    [
      'M',
      'Z',
      'R',
      'B',
      'K',
      'E',
      'S',
      'Q',
      'O',
      'A',
      'Y',
      'D',
      'J',
      'W',
      'N',
      'X',
      'C',
    ],
    [
      'V',
      'E',
      'B',
      'Q',
      'N',
      'R',
      'L',
      'S',
      'J',
      'Z',
      'M',
      'C',
      'Y',
      'G',
      'U',
      'D',
      'F',
    ],
    [
      'Q',
      'H',
      'J',
      'V',
      'B',
      'S',
      'K',
      'Y',
      'L',
      'F',
      'M',
      'D',
      'N',
      'O',
      'R',
      'C',
      'A',
    ],
    [
      'X',
      'W',
      'Y',
      'T',
      'S',
      'V',
      'E',
      'Q',
      'A',
      'K',
      'R',
      'L',
      'B',
      'F',
      'U',
      'M',
      'Z',
    ],
    [
      'T',
      'Z',
      'D',
      'S',
      'U',
      'O',
      'C',
      'N',
      'H',
      'A',
      'F',
      'X',
      'Q',
      'P',
      'K',
      'L',
      'Y',
    ],
    [
      'A',
      'R',
      'D',
      'J',
      'T',
      'Y',
      'B',
      'W',
      'V',
      'G',
      'S',
      'U',
      'Q',
      'E',
      'H',
      'N',
      'M',
    ],
    [
      'P',
      'Z',
      'B',
      'Y',
      'K',
      'H',
      'S',
      'M',
      'O',
      'L',
      'V',
      'C',
      'T',
      'Q',
      'J',
      'N',
      'D',
    ],
    [
      'B',
      'F',
      'J',
      'N',
      'V',
      'Q',
      'D',
      'W',
      'H',
      'A',
      'S',
      'M',
      'G',
      'O',
      'E',
      'R',
      'X',
    ],
    [
      'V',
      'G',
      'Y',
      'B',
      'D',
      'O',
      'P',
      'K',
      'C',
      'N',
      'Q',
      'H',
      'M',
      'F',
      'A',
      'U',
      'X',
    ],
    [
      'F',
      'M',
      'U',
      'O',
      'T',
      'Q',
      'A',
      'K',
      'G',
      'E',
      'N',
      'Y',
      'J',
      'W',
      'X',
      'B',
      'H',
    ],
    [
      'K',
      'Z',
      'Q',
      'D',
      'R',
      'Y',
      'H',
      'S',
      'L',
      'P',
      'F',
      'B',
      'G',
      'O',
      'N',
      'A',
      'V',
    ],
    [
      'K',
      'W',
      'G',
      'H',
      'L',
      'E',
      'D',
      'U',
      'F',
      'J',
      'M',
      'X',
      'R',
      'Y',
      'S',
      'C',
      'Q',
    ],
    [
      'S',
      'R',
      'V',
      'J',
      'G',
      'Y',
      'Z',
      'P',
      'H',
      'E',
      'T',
      'F',
      'C',
      'W',
      'D',
      'M',
      'K',
    ],
    [
      'W',
      'D',
      'P',
      'F',
      'H',
      'C',
      'V',
      'K',
      'M',
      'E',
      'Y',
      'O',
      'X',
      'T',
      'S',
      'J',
      'G',
    ],
    [
      'C',
      'W',
      'Z',
      'B',
      'S',
      'E',
      'F',
      'G',
      'Q',
      'T',
      'K',
      'A',
      'L',
      'M',
      'V',
      'Y',
      'U',
    ],
    [
      'W',
      'A',
      'X',
      'V',
      'O',
      'R',
      'E',
      'K',
      'M',
      'P',
      'T',
      'U',
      'Z',
      'G',
      'N',
      'J',
      'Q',
    ],
    [
      'K',
      'U',
      'M',
      'S',
      'F',
      'O',
      'T',
      'B',
      'Y',
      'Q',
      'D',
      'X',
      'L',
      'E',
      'V',
      'G',
      'P',
    ],
    [
      'Q',
      'G',
      'N',
      'T',
      'E',
      'A',
      'J',
      'U',
      'R',
      'M',
      'F',
      'X',
      'Z',
      'Y',
      'H',
      'K',
      'C',
    ],
    [
      'Y',
      'M',
      'N',
      'F',
      'K',
      'E',
      'D',
      'U',
      'G',
      'A',
      'W',
      'O',
      'P',
      'L',
      'Z',
      'Q',
      'S',
    ],
    [
      'K',
      'L',
      'F',
      'A',
      'R',
      'M',
      'Y',
      'S',
      'T',
      'B',
      'C',
      'N',
      'E',
      'Z',
      'J',
      'W',
      'U',
    ],
    [
      'L',
      'X',
      'S',
      'Z',
      'R',
      'G',
      'B',
      'H',
      'K',
      'A',
      'E',
      'T',
      'Y',
      'W',
      'V',
      'C',
      'J',
    ],
    [
      'L',
      'C',
      'A',
      'P',
      'E',
      'H',
      'D',
      'G',
      'S',
      'N',
      'V',
      'F',
      'U',
      'O',
      'J',
      'Y',
      'T',
    ],
    [
      'Y',
      'R',
      'G',
      'O',
      'J',
      'D',
      'A',
      'M',
      'V',
      'B',
      'Z',
      'H',
      'S',
      'T',
      'P',
      'N',
      'F',
    ],
    [
      'D',
      'L',
      'N',
      'T',
      'M',
      'C',
      'A',
      'B',
      'Z',
      'U',
      'R',
      'X',
      'K',
      'Q',
      'C',
      'S',
      'P',
    ],
    [
      'J',
      'R',
      'W',
      'G',
      'N',
      'O',
      'Y',
      'B',
      'D',
      'A',
      'M',
      'X',
      'T',
      'K',
      'Q',
      'U',
      'F',
    ],
    [
      'R',
      'E',
      'G',
      'D',
      'F',
      'H',
      'B',
      'A',
      'W',
      'U',
      'S',
      'J',
      'P',
      'K',
      'X',
      'N',
      'C',
    ],
    [
      'U',
      'P',
      'K',
      'B',
      'M',
      'L',
      'N',
      'A',
      'Z',
      'F',
      'V',
      'D',
      'Q',
      'R',
      'W',
      'E',
      'J',
    ],
    [
      'B',
      'Z',
      'E',
      'J',
      'G',
      'V',
      'X',
      'C',
      'D',
      'F',
      'R',
      'K',
      'U',
      'O',
      'Q',
      'A',
      'W',
    ],
    [
      'U',
      'Z',
      'X',
      'J',
      'C',
      'H',
      'F',
      'D',
      'Q',
      'B',
      'E',
      'L',
      'G',
      'O',
      'A',
      'N',
      'T',
    ],
    [
      'Z',
      'U',
      'H',
      'R',
      'D',
      'L',
      'W',
      'E',
      'V',
      'K',
      'X',
      'O',
      'M',
      'Y',
      'A',
      'S',
      'N',
    ],
    [
      'R',
      'W',
      'S',
      'O',
      'A',
      'J',
      'E',
      'Y',
      'H',
      'Z',
      'B',
      'C',
      'V',
      'K',
      'L',
      'U',
      'F',
    ],
  ];

  currentHistoryIndex = 0;

  type = 0;

  history = new Array<Line>(0);

  currentFixedOrderIndex = 0;

  lastIndex = 0;

  getNextLine(): Line {
    if (this.currentHistoryIndex > 1) {
      this.currentHistoryIndex -= 1;
      if (this.currentHistoryIndex > 0)
        return this.history[this.currentHistoryIndex - 1];
    }
    switch (this.type) {
      case LineGenerationType.PseudorandomFixed: // Fixed Samples Fixed Order
        this.PushToHistory(
          new Line(
            this.Letters[this.currentFixedOrderIndex],
            this.Positions[this.currentFixedOrderIndex]
          )
        );
        if (this.currentFixedOrderIndex < 59) {
          this.currentFixedOrderIndex += 1;
        } else {
          this.currentFixedOrderIndex = 0;
        }
        break;
      case LineGenerationType.Pseudorandom: {
        // Fixed Samples Random Order
        let num: number;
        do {
          num = getRandomNumber(59);
        } while (
          this.lastIndex === num ||
          this.HistoryCheck(this.Positions[num])
        );
        this.lastIndex = num;
        this.PushToHistory(new Line(this.Letters[num], this.Positions[num]));
        break;
      }
      case LineGenerationType.Random:
      default: {
        // Random Sample
        const line = new Line();
        let num: number;
        do {
          num = getRandomNumber(2) + 1;
        } while (this.HistoryCheck(num));
        line.Position = num;
        line.Letters = LineProvider.getLetters();
        this.PushToHistory(line);
        break;
      }
    }
    return this.history[0];
  }

  HistoryCheck(newPos: number) {
    if (this.history[0] != null) {
      return this.history[0].Position === newPos;
    }
    return false;
  }

  getPreviousLine() {
    if (this.currentHistoryIndex < this.history.length) {
      this.currentHistoryIndex += 1;
    }
    return this.history[this.currentHistoryIndex - 1];
  }

  PushToHistory(newLine: Line) {
    this.history.unshift(newLine);
    if (this.history.length > 10) this.history.length = 10;
  }

  static getLetters(): string[] {
    const array = new Array<number>(17);
    for (let i = 0; i < 17; i += 1) {
      let nextLetter = getRandomNumber(25) + 65;
      let flag = false;
      do {
        nextLetter = getRandomNumber(25) + 65;
        if (!array.includes(nextLetter) && nextLetter !== 73) {
          flag = true;
        }
      } while (!flag);
      array[i] = nextLetter;
    }
    return LineProvider.convertToSrtingArray(array);
  }

  static convertToSrtingArray(letters: number[]) {
    const array = new Array<string>(letters.length);
    for (let i = 0; i < letters.length; i += 1) {
      array[i] = String.fromCharCode(letters[i]);
    }
    return array;
  }

  constructor(type: number = 0) {
    this.type = type;
  }
}

export { LineProvider, getRandomNumber, LineGenerationType };
